# -*- coding: utf-8 -*-
"""ProiectCursInvAutomata.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yx2hNW75Izq5NuYzjvxkP6ksCuBM80MA
"""

import keras
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import tree
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
import random
import plotly.express as px

pip freeze

dataFake = pd.read_csv('/content/Fake.csv')
dataTrue = pd.read_csv('/content/True.csv')

print("Data Fake:")
print(dataFake.head(1))

print("Data True:")
print(dataTrue.head(1))

print("Data Fake info:")
dataFake.info()

print("Data True info:")
dataTrue.info()

dataFake['Type'] = 'fake news'
dataTrue['Type'] = 'real news'

print("Data True:")
print(dataTrue.head(1))

print("Data Fake:")
print(dataFake.head(1))

all_data = pd.concat((dataFake, dataTrue), axis = 0)

print(all_data)

shuffled_data = all_data.sample(frac=1, random_state=42)
shuffled_data = shuffled_data.reset_index(drop=True)
print(shuffled_data)

all_data=shuffled_data
all_data = pd.DataFrame(all_data)

all_data.columns

all_data.info()

all_data

count_by_type = all_data['Type'].value_counts()
plt.pie(count_by_type, labels=count_by_type.index, autopct='%1.1f%%', startangle=90)
plt.title("Distribution of Type")
plt.axis('equal')
plt.show()

news_group_by_subject = all_data['subject'].value_counts()
print(news_group_by_subject)

news_group_by_subject.plot(kind='barh', color='m')
plt.ylabel('Subject')
plt.xlabel('Count News)')
plt.title('Count News by Subject')
plt.show()

subject_dis_by_type = px.histogram(
    data_frame = all_data,
    x = "subject",
    color = "subject",
    facet_col = "Type",
    title = "Fake and Real Subject Distribution",
    text_auto=True
    )
subject_dis_by_type.show()